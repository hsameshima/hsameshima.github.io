---
title: "Habits"
author: "John Doe"
format: revealjs
---

## Getting up

- Turn off alarm
- Get out of bed

## Going to sleep

- Get in bed
- Count sheep

## Matplotlib sample

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

## Plotly sample

```{python}
import plotly.graph_objects as go
import numpy as np

from astropy.modeling.models import BlackBody
import astropy.units as u

import warnings
warnings.simplefilter('ignore')

# Read solar spectrum
f = open('astmg173.csv', 'r')
lines = f.readlines()
wave_sun = np.zeros(0)
flux_sun = np.zeros(0)
for line in lines[2:]:
  wave_sun = np.append(wave_sun, float(line.strip().split(',')[0])) # nm
  flux_sun = np.append(flux_sun, float(line.strip().split(',')[1]))
f.close()


# Create figure
fig = go.Figure()

fig.add_trace(
  go.Scatter(
      visible=True,
      line=dict(color="red", width=1),
      name="Sun",
      x = wave_sun,
      y = flux_sun / max(flux_sun),
      )
  )

# Add traces, one for each slider step
for step in np.arange(100, 8100, 100):
    bb_lam = BlackBody(step * u.K, scale=1.0 * u.erg / (u.cm ** 2 * u.AA * u.s * u.sr))
    fig.add_trace(
        go.Scatter(
            visible=False,
            line=dict(color="#00CED1", width=6),
            name="T = " + str(step) + "K",
            x = np.arange(100, 4000, 1),
            y = bb_lam(np.arange(100, 4000, 1) * u.nm) / max(bb_lam(np.arange(100, 4000, 1) * u.nm))
            )
        )

# Make 10th trace visible
fig.data[10].visible = True

# Create and add slider
steps = []
for i in range(len(fig.data)):
    step = dict(
        method="update",
        args=[{"visible": [False] * len(fig.data)},
              {"title": "Slider switched to T = " + str(100 * i) + "K"}],  # layout attribute
              #{"title": "Slider switched to step: " + str(i)}],  # layout attribute
    )
    step["args"][0]["visible"][i] = True  # Toggle i'th trace to "visible"
    step["args"][0]["visible"][0] = True  # Toggle i'th trace to "visible"
    steps.append(step)

sliders = [dict(
    active=10, # default value of the step. should be set to the same value with the above "fig.data[X].visible = True"
    currentvalue={"prefix": "Temperature: "},
    pad={"t": 50}, # padding of the slider
    steps=steps
)]

fig.update_layout(
    sliders=sliders,
    width=800,
    height=600,
    margin=dict(l=50,r=50,t=50,b=50),
    xaxis=dict(
        title_text="Wavelength (nm)",
        range=[0, 2500]
    ),
    yaxis=dict(
        title_text="Normalized F_Î»",
        #range=[0, 1e7]
    )
)

fig.show()
```